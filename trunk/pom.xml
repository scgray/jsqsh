<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.sqsh</groupId>
  <artifactId>jsqsh</artifactId>
  <packaging>jar</packaging>
  <version>2.1.0-SNAPSHOT</version>
  <name>JSqsh</name>

  <properties>
    <install.dir>/usr</install.dir>
    <test.output.directory>${project.build.directory}/test-output</test.output.directory>
    <jni.src.dir>${basedir}/src/main/jni</jni.src.dir>
    <jni.install.dir>${project.build.directory}/staging/jni</jni.install.dir>
    <build.arch>noarch</build.arch>
    <deb.arch>all</deb.arch>
    <build.timestamp>${maven.build.timestamp}</build.timestamp>
    <maven.build.timestamp.format>yyyyMMdd</maven.build.timestamp.format>
    <dist.tmp>${basedir}/target/${project.artifactId}-${project.version}-dist</dist.tmp>
  </properties>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.7.2</version>
        <configuration>
          <skipTests>true</skipTests>
          <workingDirectory>${test.output.directory}</workingDirectory>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <descriptors>
            <descriptor>src/assembly/assembly.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
        <excludes>
          <exclude>jsqsh.properties</exclude>
        </excludes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>jsqsh.properties</include>
        </includes>
      </resource>
    </resources>
  </build>

  <profiles>
    <!-- =================================================================
         ==               Compile w/JNI Code
         ================================================================= -->
    <profile>
      <id>build-jni</id>
      <activation>
        <property>
          <name>jni</name>
          <value>true</value>
        </property>
      </activation>
  
      <properties>
        <build.arch>${os.arch}</build.arch>
        <deb.arch>${os.arch}</deb.arch>
      </properties>

      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>exec-one</id>
                <phase>compile</phase>
                <configuration>
                  <executable>${jni.src.dir}/configure</executable>
                  <workingDirectory>${jni.src.dir}</workingDirectory>
                  <arguments>
                    <argument>--prefix=${jni.install.dir}</argument>
                  </arguments>
                </configuration>
                <goals>
                  <goal>exec</goal>
                </goals>
              </execution>
              <execution>
                <id>exec-two</id>
                <phase>compile</phase>
                <configuration>
                  <executable>make</executable>
                  <workingDirectory>${jni.src.dir}</workingDirectory>
                  <arguments>
                    <argument>install</argument>
                  </arguments>
                </configuration>
                <goals>
                  <goal>exec</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <version>2.6</version>
            <executions>
              <execution>
                <id>resources</id>
                <phase>process-classes</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${basedir}/target/classes/org/sqsh/jni</outputDirectory>
                  <resources>
                    <resource>
                      <directory>${jni.install.dir}/lib</directory>
                      <includes>
                        <include>*.so.0.0.0</include>
                      </includes>
                      <filtering>false</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- =================================================================
         ==               Create RPM Build Target
         ================================================================= -->
    <profile>
      <id>rpm</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>rpm-maven-plugin</artifactId>
            <version>2.1-alpha-3</version>
            <executions>
              <execution>
                <id>pkg</id>
                <phase>package</phase>
                <goals>
                  <goal>rpm</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <group>Applications/Databases</group>
              <prefix>${install.dir}</prefix>
              <changelogFile>${base.dir}/ChangeLog</changelogFile>
              <copyright>Apache 2.0</copyright>
              <needarch>${build.arch}</needarch>
              <mappings>
                <mapping>
                  <directory>${install.dir}</directory>
                  <directoryIncluded>false</directoryIncluded>
                  <filemode>666</filemode>
                  <sources>
                    <source>
                      <location>${dist.tmp}</location>
                      <includes>
                        <include>share/**/*</include>
                      </includes>
                    </source>
                  </sources>
                </mapping>
                <mapping>
                  <directory>${install.dir}</directory>
                  <directoryIncluded>false</directoryIncluded>
                  <filemode>755</filemode>
                  <sources>
                    <source>
                      <location>${dist.tmp}</location>
                      <includes>
                        <include>bin/*</include>
                      </includes>
                    </source>
                  </sources>
                </mapping>
              </mappings>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- =================================================================
         ==               Create DEB Build Target
         ================================================================= -->
    <profile>
      <id>deb</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.vafer</groupId>
            <artifactId>jdeb</artifactId>
            <version>1.0.1</version>
            <executions>
              <execution>
                <id>pkg</id>
                <phase>package</phase>
                <goals>
                  <goal>jdeb</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <deb>${basedir}/target/${project.artifactId}-${project.version}-${build.arch}.deb</deb>
              <installDir>/usr</installDir>
              <dataSet>
                <data>
                  <src>${dist.tmp}</src>
                  <type>directory</type>
                  <includes>bin/*</includes>
                  <mapper>
                    <type>perm</type>
                    <filemode>755</filemode>
                    <prefix>/usr</prefix>
                  </mapper>
                </data>
                <data>
                  <src>${dist.tmp}</src>
                  <type>directory</type>
                  <excludes>bin/*</excludes>
                  <mapper>
                    <type>perm</type>
                    <filemode>644</filemode>
                    <prefix>/usr</prefix>
                  </mapper>
                </data>
              </dataSet>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <dependencies>
    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <version>1.8.3</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>3.2.1</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>commons-digester</groupId>
      <artifactId>commons-digester</artifactId>
      <version>1.8.1</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.6</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.velocity</groupId>
      <artifactId>velocity</artifactId>
      <version>1.7</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>jline</groupId>
      <artifactId>jline</artifactId>
      <version>2.11</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.gnu</groupId>
      <artifactId>java-readline</artifactId>
      <version>0.8.0</version>
      <scope>system</scope>
      <systemPath>${basedir}/lib-nondist/readline-0.8.0.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>com.ibm</groupId>
      <artifactId>jaql</artifactId>
      <version>0.5.2</version>
      <scope>system</scope>
      <systemPath>${basedir}/lib-nondist/jaql.jar</systemPath>
    </dependency>
  </dependencies>
</project>
